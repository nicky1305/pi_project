extends ../layouts/dashboard.pug

block config
    - var bodyClass = 'sb-nav-fixed'
    - var pageTitle = 'IPTV Test';
    - var index = true;
    - var sidenavStyle = 'sb-sidenav-dark'
 
prepend css
    //- Load Simple DataTables Stylesheet
    link(href='https://cdn.jsdelivr.net/npm/simple-datatables@7.1.2/dist/style.min.css', rel='stylesheet')

block content
    .container-fluid.px-4
        include includes/page-header.pug
        .container-fluid.px-4
            .row
                .col-md-6
                    h2 Run test
                    #apiResults(style="margin-top: 20px")
                        form#ping-form
                            .mb-3
                                .form-group
                                    label(for="device") Device
                                    input#device.form-control(type="text", placeholder="Enter the device hostname")
                                br
                                button.btn.btn-primary(type="submit") IPTV Test
                .col-md-6
                    .border.p-3(style="height: 500px")
                        h2 IPTV Test Results
                        #loading
                            img(autoplay, loop, width="300",height="300", class="center", src="https://media.giphy.com/media/sSgvbe1m3n93G/giphy.gif?cid=790b76117y4fxqvton3bcf6czbjqllx2g26p3dzafsxoc2a1&ep=v1_gifs_search&rid=giphy.gif&ct=g")
                            p(class="p1_center") Your Proccess is running!!!
                            p(class="p1_center") Please wait...
                        table#pingDataTable
                            thead
                                tr#tableHeader
                                    // Headers will be populated by JavaScript
                            tbody#tableBody
                                // Data rows will be populated by JavaScript
    append scripts
    //- Load Chart.js and demos
    script(src='https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.min.js', crossorigin='anonymous')
    script(src='assets/demo/chart-area-demo.js')
    script(src='assets/demo/chart-bar-demo.js')
    //- Load Simple DataTables Scripts
    script(src='https://cdn.jsdelivr.net/npm/simple-datatables@7.1.2/dist/umd/simple-datatables.min.js', crossorigin='anonymous')
    script(src='js/datatables-simple-demo.js')
    script.
        let lastJSON = null;
        let intervalID = null;
        document.getElementById('loading').style.display = 'none';
        document.getElementById('ping-form').addEventListener('submit', async (event) => {
        event.preventDefault();
        //clear table
        tableHeader.innerHTML = '';
        tableBody.innerHTML = '';
        // Show the loading gif
        document.getElementById('loading').style.display = 'block';
        // Start the interval to fetch ping data every 1 second
        intervalID = setInterval(fetchPingData, 1000);
        try {
        const response = await fetch('http://192.168.36.183:3000/requestiptv');
        const data = await response.json();
        const resultsContainer = document.getElementById('apiResults');
        resultsContainer.innerHTML = '';
        data.forEach((item) => {
        const itemDiv = document.createElement('div');
        itemDiv.innerHTML = `<strong>Domain:</strong> ${item.domain} - <strong>Status:</strong> ${item.status}`;
        resultsContainer.appendChild(itemDiv);
        });
        }
        catch (error) {
        console.error('Error:', error);
        }
        });
        
        // Function to fetch data from the API and populate the table
        async function fetchPingData() {
        try {
        const response = await fetch('http://192.168.36.183:3000/pingdata');
        const data = await response.json();
        if (JSON.stringify(data) !== JSON.stringify(lastJSON)) {
        lastJSON = data;
        // Populate the table
        populateTable(data);
        // Hide the loading gif
        document.getElementById('loading').style.display = 'none';
        // Clear the interval
        clearInterval(intervalID);
        } else {
        // Show the loading gif if nothing new
        document.getElementById('loading').style.display = 'block';
        }
        } catch (error) {
        console.error('Error fetching data:', error);
        }
        }
        
        // Function to populate the table with data
        function populateTable(data) {
        const tableHeader = document.getElementById('tableHeader');
        const tableBody = document.getElementById('tableBody');
        // Clear existing table headers and body
        tableHeader.innerHTML = '';
        tableBody.innerHTML = '';
        // Assuming the JSON is an array of objects
        if (data.length > 0) {
        // Create table headers excluding 'ID'
        const headers = Object.keys(data[0]).filter((header) => header !== '_id' && header !== '__v');
        headers.forEach((header) => {
        const th = document.createElement('th');
        th.textContent = header;
        tableHeader.appendChild(th);
        });
        // Create table rows
        data.forEach((item) => {
        const tr = document.createElement('tr');
        headers.forEach((header) => {
        const td = document.createElement('td');
        td.textContent = item[header];
        tr.appendChild(td);
        });
        tableBody.appendChild(tr);
        });
        }
        }